name: Sync Public Gitee to GitHub

# 触发条件：每天 UTC 0 点自动执行，也可手动触发
on:
  #push:
      #branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # 每天运行一次.
  workflow_dispatch:  # 允许手动触发
    types: [manual-trigger]  

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 授予写入内容的权限
    steps:
      # 步骤 1: 检出当前 GitHub 仓库
      - name: Checkout GitHub repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录，确保同步完整性
          token: ${{ secrets.GITHUBTOKEN }}  # 显式指定使用 GitHub 令牌

      # 步骤 2: 配置 Git 身份信息
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      # 步骤 3: 添加 Gitee 公开仓库作为远程源
      - name: Add Gitee remote
        run: |
          git remote add gitee https://gitee.com/xiongood/blog-source.git || true
          # 验证远程仓库配置（公开仓库无需认证）
          git remote -v

      # 拉取github代码
      - name: Pull latest from GitHub first
        run: |
          git pull origin main --rebase  # 先拉取 GitHub 最新代码
        continue-on-error: false

      # 步骤 4: 从 Gitee 拉取最新代码（公开仓库无需令牌）.
      - name: Pull from Gitee
        run: |
          # 尝试正常拉取并变基
          if ! git pull gitee master --rebase; then
            echo "Conflict detected, attempting to resolve..."
            # 放弃当前变基
            git rebase --abort
            # 拉取 Gitee 代码并强制覆盖本地冲突文件
            git fetch gitee master
            # 以 Gitee 代码为主，强制合并
            git merge -X theirs gitee/master
          fi
        continue-on-error: false  # 拉取失败时终止工作流

      # 步骤 5: 推送到 GitHub 仓库。
      - name: Push to GitHub
        run: |
          git push origin main --force-with-lease
        env:
          # 使用 GitHub 内置令牌进行推送认证
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
    
